mixin slide(names, slideClasses)
  if names
    section(class=names+' '+slideClasses, data-bespoke-backdrop='backdrop ' + names.split(' ').map(function(name) { return 'backdrop--' + name; }).join(' '))
      block
  else
    section
      block

doctype html
html
  head
  meta(charset='utf-8')
  meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
  title Mocks, Stubs and Fakes. ¿What Else?.

  link(rel='stylesheet', type='text/css', href='build/build.css')
  link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css')

  body

    article

      +slide
        h1 Mocks, Stubs and Fakes. <br/><span class='important'>¿What Else?</span>.
        aside(role='note') First day, secrets

      +slide
        img.avatar(src='images/profile.jpg')
        h4 
          i.fa.fa-twitter alexsotob - lordofthejars.com
        img.cloudbees(src='images/cloudbees.png')
        img.logos(src='images/logos.png')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        div.images
          img.side-by-side(src='images/dzone1.png')
          img.side-by-side(src='images/aia.jpg')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('ci')
        h1 Continuous Integration
        h3 Commit Stage
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        img.schemas(src='images/ci.png')
        aside(role='note') Some tools of unit can be used in integration
      
      +slide('unit')
        h2 Unit tests
        aside(role='note') Individual units of source code, talk about what is units NOT common sense
      
      +slide
        h2 FIRST
        h3 Fast, Isolated, Repeteable, Self-Validating, Timely
        aside(role='note') About Common sense
      
      +slide('interlink')
        h2 Applications are complex
      
      +slide('dummy2')
        h1 <span class="important">Test</span> Double
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') Replace production object for testing purpose
        
      +slide('dummy')
        h2 Mocks
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.underline Mocks
        ul.lists
          li Pre-programmed with expectations
          li Behavior Verification
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
          
      +slide 
        h2.underline The Good and <span class="important">The Bad</span>
        ul.lists
          li Fast
          li Easy to write
          li Versatile
          li Mockito, EasyMock, jMock
          li.important Verbose
          li.important Reimplementing Business
          li.important No state
          li.important No executing full stack
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('mockito')
        
      +slide  
        h2 Dependencies
        pre.small.language-javascript
          code.
            testCompile ('org.mockito:mockito-all:1.10.19') {
              exclude group: 'org.hamcrest'
            }
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide  
        h2 Init
        pre.small.language-javascript
          code.
            @RunWith(MockitoJUnitRunner.class)
            public class Test {
              @Mock EmailService email;
            }
            
            public class Test {

              @Mock EmailService email;
              
              @Before public void before() {
                MockitoAnnotations.initMocks(this)
              }
            }
            
            EmailService emailService = Mockito.mock(EmailService.class);

        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide  
        h2 Example
        pre.small.language-javascript
          code.
            Mockito.when(email.receiveBodyMessagesWithSubject("My Subject")).thenReturn("This is My Message")
            
            System.out.println(email.receiveBodyMessagesWithSubject("Wrong subject"));
            System.out.println(email.receiveBodyMessagesWithSubject("My Subject"));
            System.out.println(email.receiveBodyMessagesWithSubject("My Subject"));
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide  
        h2 Example With Any
        pre.small.language-javascript
          code.
            Mockito.when(email.receiveBodyMessagesWithSubject(Matchers.anyString())).thenReturn("This is My Message");

            System.out.println(email.receiveBodyMessagesWithSubject("Subject"));
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide  
        h2 Example Verify
        pre.small.language-javascript
          code.
            InvoiceService invoiceService = new InvoiceService(email);
            invoiceService.send();
            
            Mockito.verify(email, Mockito.times(1)).sendMessage(Matchers.anyString(), Matchers.anyString());
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') not verifying for example the number of emails sent. No state
        
      +slide  
        h2 Example Argument Captor
        pre.small.language-javascript
          code.
            InvoiceService invoiceService = new InvoiceService(email);
            invoiceService.send();
            
            ArgumentCaptor<String> argument = ArgumentCaptor.forClass(String.class);
            Mockito.verify(email, Mockito.times(1)).sendMessage(argument.capture(), Matchers.anyString());

            Assert.assertThat(argument.getValue(), CoreMatchers.startsWith("Invoice:"));
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide  
        h2 Example Spy
        pre.small.language-javascript
          code.
            EmailService email = new EmailService();
            EmailService spyEmail = Mockito.spy(email);
            InvoiceService invoiceService = new InvoiceService(spyEmail);
            invoiceService.send();
            
            Mockito.verify(spyEmail, Mockito.times(1)).sendMessage(argument.capture(), Matchers.anyString());
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

      +slide('powermock')
      
      +slide  
        h2 Dependencies
        pre.small.language-javascript
          code.
            testCompile ('org.powermock:powermock-module-junit4:1.6.4')
            testCompile ('org.powermock:powermock-api-mockito:1.6.4')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide  
        h2 Prepare for Mocking
        pre.small.language-javascript
          code.
            @RunWith(PowerMockRunner.class)
            @PrepareForTest(StaticClass.class)
            public class MyTest {
            }
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide  
        h2 Mock Static
        pre.small.language-javascript
          code.
            PowerMockito.mockStatic(StaticClass.class);
            Mockito.when(StaticClass.getValue()).thenReturn("Hello");

            System.out.println(StaticClass.getValue());
            PowerMockito.verifyStatic();
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide  
        h2 Mock Constructor
        pre.small.language-javascript
          code.
            PowerMockito.whenNew(MyClass.class)
                          .withNoArguments()
                          .thenThrow(new IOException("error message"));

            X x = new X();
            x.createMyClass();
            PowerMockito.verifyNew(MyClass.class).withNoArguments();
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
          
      +slide  
        h2 Private Method
        pre.small.language-javascript
          code.
            Calculator calculator = PowerMockito.spy(new Calculator());
            PowerMockito.doReturn(true).when(calculator, "isCalculated");

            System.out.println(calculator.calculate());
            PowerMockito.verifyPrivate(calculator).invoke("isCalculated");
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('adaoh')
        h2 Be Aware
        h3 All that Glitters is not Gold
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') 
            li It is so slow 10x
            li Probably shows you a problem with design
      
      +slide  
        h2 Example of System
        pre.small.language-javascript
          code.
            if (System.currentTimeMillis() > pojo.getStartDate() + expiration) {
            }
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide  
        h2 Java 8
        pre.small.language-javascript
          code.
            java.time.Clock clock;
            public void X() {
              if (eventDate.isBefore(LocalDate.now(clock)) {
              }
            }
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide  
        h2 Java
        pre.small.language-javascript
          code.
            TimeResolution clock;
            public void X() {
              if (clock.now() > pojo.getStartDate() + expiration) {
              }
            }
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('dummy')
        h2 Stubs
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.underline Stubs
        ul.lists
          li Canned answers to calls
          li State Verification
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide  
        h2 Email Service
        pre.small.language-javascript
          code.
            public class EmailServiceStub implements EmailService {
              private List<Email> emails = new ArrayList<>();
              
              public void sendMessage(String subject, String body) {
                this.emails.add(new Email(subject, body));
              }
              
              public String receiveBodyMessagesWithSubject(String subject) {
                // ...
              }
            }
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide 
        h2.underline The Good and <span class="important">The Bad</span>
        ul.lists
          li Fast
          li Easy to write
          li Versatile
          li.important Reimplementing Business
          li.important Logic is outside test
          li.important State
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('wiremock')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide  
        h2 Wiremock
        pre.small.language-javascript
          code.
            @Rule
            public WireMockRule wireMockRule = new WireMockRule(8089);
            
            stubFor(get(urlEqualTo("/planets/"))
                .willReturn(aResponse()
                        .withHeader("Content-Type", "application/json")
                        .withBody(Files.readAllBytes(configFile.toPath())))
            );
            
            client.target("http://localhost:8089/").path("planets/");
            
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('dummy')
        h2 Fakes
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.underline Fakes
        ul.lists
          li Working implementations
          li With shortcuts
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('inmem')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('fakesmtp')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('spring')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide 
        h2.underline The Good and <span class="important">The Bad</span>
        ul.lists
          li Almost real
          li Test full stack
          li.important Slow
          li.important Learn New Tech
          li.important Different Behaviour
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('dummy')
        h2 Mocking 2.0
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') 
            li Bytecode modification and implications
            li Fault injection
      
      +slide('byteman')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide  
        h2 Byteman
        pre.small.language-javascript
          code.
            testCompile ('org.jboss.byteman:byteman-bmunit:3.0.3') {
              exclude group: 'org.testng'
            }
            
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide  
        h2 Byteman
        pre.small.language-javascript
          code.
            public WebWriter(String filename) {
              this.filename = filename;
              
            }

            public PrintStream openFile() {
              File file = new File(filename);
              try {
                FileOutputStream fos = new FileOutputStream(file);
                PrintStream ps = new PrintStream(fos, true);
                return ps;
              } catch (FileNotFoundException e) {
                System.out.println("Unable to open file " + file.getName());
                System.out.println(e);
                return null;
              }
            }
            
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide  
        h2 Byteman
        pre.small.language-javascript
          code.
            @RunWith(org.jboss.byteman.contrib.bmunit.BMUnitRunner.class)
            public class Test {
    
              @Test
              @BMRule(name = "handle file not found",
                targetClass = "java.io.FileOutputStream",
                targetMethod = "<init>(File)",
                action = "throw new FileNotFoundException( \"Ha ha Byteman fooled you again!\" )"
              )
              public void handleFileNotFound() throws FileNotFoundException {
                System.out.println("-------- handleFileNotFound ---------");
                WebWriter writer = new WebWriter("foo.html", "Andrew");
                PrintStream ps = writer.openFile();
                Assert.assertTrue(ps == null);
                System.out.println("-------- handleFileNotFound ---------\n");
              }
            }
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('whale')
        
        h2 Docker as Test Tool
      
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('arquillian')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
 
      +slide('orch')
        h1 Continuous Integration As Code
        h3 <span class='important'>Pipeline Plugin</span>
      
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        img.schemas(src='images/jenkins.jpg')
      
      +slide  
        h2 Jenkinsfile
        pre.small.language-javascript
          code.
            stage 'compileAndUnit'
            node {
                    git branch: 'master', url: 'https://github.com/lordofthejars/starwars.git'
                    gradle 'clean test'
                    stash excludes: 'build/', includes: '**', name: 'source'
                    stash includes: 'build/jacoco/*.exec', name: 'unitCodeCoverage'
                    step([$class: 'JUnitResultArchiver', testResults: '**/build/test-results/*.xml'])
            }
            stage 'codeQuality'
            parallel 'pmd' : {
                node {
                    unstash 'source'
                    gradle 'pmdMain'
                    step([$class: 'PmdPublisher', pattern: 'build/reports/pmd/*.xml'])
                }
            }, 'jacoco': {
                node {
                    unstash 'source'
                    unstash 'unitCodeCoverage'
                    gradle 'jacocoTestReport'
                }
            }
            
            input message: "Deploy Application to QA ?"
      
      +slide
        img.schemash(src='images/ui.png')
      
      +slide('adathink')
        h1 Let's wind <br/> down
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') Only first taste go to webpage
     
      +slide 
        h2.underline What You have Seen
        ul.lists
          li Unit tests should be FIRST
          li Mock, Stubs and Fakes
          li Docker as Testing Tool
          li Jenkins is not static anymore
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

      +slide
        img.schemash(src='images/YourAppV2-min.png')

      +slide('adarise')
        h1 Questions
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        img.avatar(src='images/profile.jpg')
        br
        a(href='http://lordofthejars.github.io/mock-stub-fake/', style='border:none')
          i.fa.fa-github
          h3 http://lordofthejars.github.io/mock-stub-fake/
          i.fa.fa-envelope
          h3 asotobu@gmail.com
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
    script(src='build/build.js')
